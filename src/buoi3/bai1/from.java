/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package buoi3.bai1;

import buoi3.bai1.batloi.dinhdangdiem;
import buoi2.bai1.*;
import buoi3.bai1.batloi.dinhdangtien;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import java.awt.Color;
import java.awt.Component;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonModel;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS TUF
 */
public class from extends javax.swing.JFrame {

    /**
     * Creates new form from
     */
    int i1 = 1, i2 = 1;

    String message = "";
    Date date = null;
    ArrayList<SinhVien> dsSinhVien = new ArrayList<>();

    SimpleDateFormat sdf = new SimpleDateFormat("dd/mm/yyyy");

    public from() {
        initComponents();
        this.setLocationRelativeTo(null);
        txtdonvi.setEnabled(false);
        txtluong.setEnabled(false);
        lbloihoten.setText(" ");
        lbloiluong.setText(" ");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMasv = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtHoten = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNgaySinh = new javax.swing.JTextField();
        cbgioitinh = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtdiem = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtdonvi = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtluong = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txthocphi = new javax.swing.JTextField();
        rdsvhttt = new javax.swing.JRadioButton();
        rdsvmm = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        btnthem = new javax.swing.JButton();
        btnluu = new javax.swing.JButton();
        lbloimasv = new javax.swing.JLabel();
        lbloihoten = new javax.swing.JLabel();
        lbloihocphi = new javax.swing.JLabel();
        lbloiluong = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Mã Sinh Viên:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("QUẢN LÝ SINH VIÊN");

        txtMasv.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMasvFocusLost(evt);
            }
        });
        txtMasv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMasvActionPerformed(evt);
            }
        });

        jLabel3.setText("Họ Tên:");

        txtHoten.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHotenFocusLost(evt);
            }
        });

        jLabel4.setText("Ngày Sinh:");

        txtNgaySinh.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNgaySinhFocusLost(evt);
            }
        });

        cbgioitinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));

        jLabel5.setText("Điểm Trung Bình:");

        txtdiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtdiemFocusLost(evt);
            }
        });

        jLabel6.setText("Đơn Vị:");

        txtdonvi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtdonviFocusLost(evt);
            }
        });
        txtdonvi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdonviActionPerformed(evt);
            }
        });

        jLabel7.setText("Lương:");

        txtluong.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtluongFocusLost(evt);
            }
        });

        jLabel8.setText("Học Phí:");

        txthocphi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txthocphiFocusLost(evt);
            }
        });

        buttonGroup1.add(rdsvhttt);
        rdsvhttt.setSelected(true);
        rdsvhttt.setText("Sinh Viên HTTT");
        rdsvhttt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdsvhtttActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdsvmm);
        rdsvmm.setText("Sinh Viên mật mã");
        rdsvmm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdsvmmActionPerformed(evt);
            }
        });

        jLabel9.setText("Giới Tính:");

        btnthem.setText("Thêm");
        btnthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemActionPerformed(evt);
            }
        });

        btnluu.setText("Lưu");
        btnluu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnluuActionPerformed(evt);
            }
        });

        lbloimasv.setBackground(new java.awt.Color(255, 51, 51));
        lbloimasv.setForeground(new java.awt.Color(255, 51, 51));
        lbloimasv.setToolTipText("");

        lbloihoten.setBackground(new java.awt.Color(255, 51, 51));
        lbloihoten.setForeground(new java.awt.Color(255, 51, 51));

        lbloihocphi.setForeground(new java.awt.Color(255, 51, 51));

        lbloiluong.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(rdsvhttt)
                        .addGap(18, 18, 18)
                        .addComponent(rdsvmm))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(42, 42, 42)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txthocphi, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtdonvi, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtluong, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbloiluong, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(43, 43, 43)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3))
                                    .addGap(60, 60, 60)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtNgaySinh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtHoten, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbloihoten)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(21, 21, 21)
                                    .addComponent(txtdiem, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(67, 67, 67)
                                    .addComponent(cbgioitinh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lbloimasv, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtMasv, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(67, 67, 67)
                            .addComponent(btnthem)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnluu)
                            .addGap(12, 12, 12)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(lbloihocphi, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMasv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbloimasv, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtHoten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(lbloihoten)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbgioitinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtdiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdsvhttt)
                    .addComponent(rdsvmm))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtdonvi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(2, 2, 2)
                .addComponent(lbloiluong)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txthocphi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbloihocphi)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnthem)
                    .addComponent(btnluu))
                .addGap(142, 142, 142))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    boolean kiemTraRong() {
        boolean kiemtrakitu;
        if (txtMasv.getText().equals("") == false) {
            try {
                String kiemtra = "\\w+";
                String masv = txtMasv.getText();
                kiemtrakitu = masv.matches(kiemtra);
                if (masv.contains("AT")) {
                    if (kiemtrakitu == false) {
                        message += "lỗi định dạng";
                        return false;
                    }
                } else {
                    message += "lỗi định dạng";
                    return false;
                }

            } catch (Exception e) {
            }
        }
        if (txtHoten.getText().equals("") == false) {
            int i = 0;
            int kiemtra = 0;
            String hoten = txtHoten.getText();
            for (i = 0; i < hoten.length(); i++) {
                char ch = hoten.charAt(i);
                if ((ch >= 'A' && ch <= 'Z') || ch == ' ' || (ch >= 'a' && ch <= 'z')) {
                } else {
                    message += "định dạng sai";
                    kiemtra++;
                    break;
                }
            }
            if (kiemtra > 0) {
                return false;
            }
            if (i <= 5) {
                message += "yêu cầu nhập đủ họ và Tên";
                return false;
            }
        }
        if (txtMasv.getText().isEmpty() || txtHoten.getText().isEmpty() || txtNgaySinh.getText().isEmpty()
                || txtdiem.getText().isEmpty()) {
            message += "Các trường không được rỗng\n";
            return false;
        }
        if (rdsvhttt.isSelected() && rdsvmm.isSelected()) {
            message += "Các trường không được rỗng\n";
            return false;
        }
        if (rdsvhttt.isSelected() && txthocphi.getText().isEmpty()) {
            message += "Các trường không được rỗng\n";
            return false;
        }
        if (rdsvmm.isSelected()) {
            if (txtluong.getText().isEmpty() || txtdonvi.getText().isEmpty()) {
                message += "Các trường không được rỗng\n";
                return false;
            }
        }
        Date ngaySinh = null;
        sdf.setLenient(false);
        try {
            ngaySinh = sdf.parse(txtNgaySinh.getText());
        } catch (ParseException ex) {
            message += ("Lỗi ngày sinh");
            return false;
        }
        double diem = 0;
        try {
            diem = Double.valueOf(txtdiem.getText());
            if (diem > 10) {
                message += "uiii!điểm không vượt quá 10 được đâu";
                return false;
            } else if (diem < 0) {
                message += "uiii! 0 là bé nhất rồi";
                return false;
            }
        } catch (NumberFormatException numberFormatException) {
            String[] chuoi = new String[5];
            String w = txtdiem.getText();
            if (diem == 0) {
                message += "điểm trung bình phải là một số";
                return false;
            }
            for (int i = 0; i < w.length(); i++) {
                char kiemtra = w.charAt(i);
                if (kiemtra == ',') {
                    chuoi = w.split(",");
                    if (chuoi[0].equals("10")) {
                        if (Double.valueOf(chuoi[1]) > 0) {
                            message += "uii!điểm không vượt quá 10 nhé";
                            return false;
                        }
                    } else if (Double.valueOf(chuoi[0]) < 0) {
                        message += "uiii! 0 là bé nhất rồi!";
                        return false;
                    }
                } else if (kiemtra == '.') {
                    chuoi = w.split(".");
                    if (chuoi[0].equals("10")) {
                        if (Double.valueOf(chuoi[1]) > 0) {
                            message += "uii!điểm không vượt quá 10 nhé";
                            return false;
                        }
                    } else if (Double.valueOf(chuoi[0]) < 0) {
                        message += "uiii! 0 là bé nhất rồi!";
                        return false;
                    }
                }
            }
        }
        String gioiTinh = cbgioitinh.getSelectedItem().toString();
        if (rdsvhttt.isSelected()) {
            String hocphi = txthocphi.getText();
            int kiemtrahocphi = 0;
            for (int i = 0; i < hocphi.length(); i++) {
                kiemtrahocphi++;
                char ch = hocphi.charAt(i);
                if (ch >= '0' && ch <= '9' || ch == '.' || ch == ',') {
                } else {
                    message += "đinh dang sau";
                    return false;
                }
            }
            if (kiemtrahocphi <= 5) {
                message += "tiền tối thiểu là 10.000";
                return false;
            }
        }
        if (rdsvmm.isSelected()) {
            String luong = txtluong.getText();
            int kiemtraluong = 0;
            for (int i = 0; i < luong.length(); i++) {
                kiemtraluong++;
                char ch = luong.charAt(i);
                if (ch >= '0' && ch <= '9' || ch == '.' || ch == ',') {
                } else {
                    message += "đinh dang sau";
                    return false;
                }
            }
            if (kiemtraluong <= 5) {
                message += "tiền tối thiểu là 10.000";
                return false;
            }
        }
        return true;
    }
    private void txtdonviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdonviActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdonviActionPerformed

    private void txtMasvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMasvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMasvActionPerformed

    private void btnthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemActionPerformed

        boolean hopLe = true;
        String masv = txtMasv.getText();
        String hoten = txtHoten.getText();
        Date ngaySinh = null;
        sdf.setLenient(false);
        try {
            ngaySinh = sdf.parse(txtNgaySinh.getText());
        } catch (ParseException ex) {
        }
        double diem = 0;
        try {
            diem = Double.valueOf(txtdiem.getText());
        } catch (NumberFormatException numberFormatException) {
        }
        String gioiTinh = cbgioitinh.getSelectedItem().toString();
        if (rdsvhttt.isSelected()) {
            String hocphi = txthocphi.getText();
            hopLe = kiemTraRong();
            if (hopLe) {
                SinhVienHTTT svhttt = new SinhVienHTTT(hocphi, masv, hoten, ngaySinh, gioiTinh, diem);
                dsSinhVien.add(svhttt);
                int i = 0;
                for (SinhVien tmp : dsSinhVien) {
                    if (dsSinhVien.get(i) instanceof SinhVienHTTT) {
                        dsSinhVien.get(i).xuat();
                    }
                    i++;
                }
            } else {
                JOptionPane.showMessageDialog(this, message);
                message = "";
            }

        } else if (rdsvmm.isSelected()) {
            String donvi = txtdonvi.getText();
            String luong = txtluong.getText();
            hopLe = kiemTraRong();
            if (hopLe) {
                SinhVienMatMa svmm = new SinhVienMatMa(donvi, luong, masv, hoten, ngaySinh, gioiTinh, diem);
                dsSinhVien.add(svmm);
                int i = 0;
                for (SinhVien tmp : dsSinhVien) {
                    if (dsSinhVien.get(i) instanceof SinhVienMatMa) {
                        dsSinhVien.get(i).xuat();
                    }
                    i++;
                }
            } else {
                JOptionPane.showMessageDialog(this, message);
                message = "";
            }

        }
    }//GEN-LAST:event_btnthemActionPerformed

    private void rdsvhtttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdsvhtttActionPerformed
        txtdonvi.setEnabled(false);
        txtluong.setEnabled(false);
        txthocphi.setEnabled(true);
    }//GEN-LAST:event_rdsvhtttActionPerformed

    private void rdsvmmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdsvmmActionPerformed
        txthocphi.setEnabled(false);
        txtdonvi.setEnabled(true);
        txtluong.setEnabled(true);
    }//GEN-LAST:event_rdsvmmActionPerformed

    private void btnluuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnluuActionPerformed
        if (rdsvhttt.isSelected()) {
            try (PrintWriter pw = new PrintWriter(new File("svat.dat"))) {
                int i = 0;
                for (SinhVien tmp : dsSinhVien) {
                    if (dsSinhVien.get(i) instanceof SinhVienHTTT) {
                        pw.println(tmp.toString());
                    }
                    i++;
                }
            } catch (Exception e) {
            }
        } else if (rdsvmm.isSelected()) {
            try (PrintWriter pw = new PrintWriter(new File("svmm.dat"))) {
                int i = 0;
                for (SinhVien tmp : dsSinhVien) {
                    if (dsSinhVien.get(i) instanceof SinhVienMatMa) {
                        pw.println(tmp.toString());
                    }
                    i++;
                }
            } catch (Exception e) {
            }
        }
        StringBuilder sb = new StringBuilder();
        sb.append("đã lưu Thành Công");
        JOptionPane.showMessageDialog(this, sb.toString(), "Thông Báo", JOptionPane.OK_CANCEL_OPTION);
    }//GEN-LAST:event_btnluuActionPerformed

    private void txtMasvFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMasvFocusLost
        boolean flag = true;
        if (txtMasv.getText().equals("") == false) {
            try {
                String kiemtra = "\\w+";
                String masv = txtMasv.getText();
                flag = masv.matches(kiemtra);
                if (masv.contains("AT") || masv.contains("at")) {
                    lbloimasv.setText(" ");
                    if (flag == false) {
                        lbloimasv.setText("viết liền,Không dấu,ký tự(AT******)");
                    } else {
                        lbloimasv.setText(" ");
                    }
                } else {
                    lbloimasv.setText("viết liền,Không dấu,ký tự(AT******)");
                }

            } catch (Exception e) {
            }
        }
        if (txtMasv.getText().equals("")) {
            lbloimasv.setText(" ");
        }
    }//GEN-LAST:event_txtMasvFocusLost

    private void txtHotenFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHotenFocusLost
        if (txtHoten.getText().equals("") == false) {
            String hoten = txtHoten.getText();
            int i = 0;
            for (i = 0; i < hoten.length(); i++) {
                char ch = hoten.charAt(i);
                if ((ch >= 'A' && ch <= 'Z') || ch == ' ' || (ch >= 'a' && ch <= 'z')) {
                    lbloihoten.setText(" ");
                } else {
                    lbloihoten.setText("không ký tự,không dấu");
                    break;
                }
            }
        }
        if (txtHoten.getText().equals("")) {
            lbloihoten.setText(" ");
        }
    }//GEN-LAST:event_txtHotenFocusLost

    private void txtNgaySinhFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNgaySinhFocusLost

    }//GEN-LAST:event_txtNgaySinhFocusLost

    private void txtdiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtdiemFocusLost
        try {
            String Diem = txtdiem.getText();
            dinhdangdiem t = new dinhdangdiem(Diem);
            txtdiem.setText(t.dinhdang());
        } catch (Exception e) {

        }

    }//GEN-LAST:event_txtdiemFocusLost

    private void txtdonviFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtdonviFocusLost

    }//GEN-LAST:event_txtdonviFocusLost

    private void txtluongFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtluongFocusLost
        try {
            long luong = Long.valueOf(txtluong.getText());
            Locale localeEn = new Locale("vn", "VN");
            NumberFormat en = NumberFormat.getInstance(localeEn);
            String tiente = en.format(luong);
            dinhdangtien t = new dinhdangtien(tiente);
            txtluong.setText(t.dinhdangtien());
            int kiemtra = 0;
            for (int i = 0; i < t.dinhdangtien().length(); i++) {
                kiemtra++;
            }
            if (kiemtra <= 5) {
                lbloiluong.setText("tối thiểu 10.000");
            } else {
                lbloiluong.setText(" ");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtluongFocusLost

    private void txthocphiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txthocphiFocusLost
        try {
            long hocphi = Long.valueOf(txthocphi.getText());
            Locale localeEn = new Locale("vn", "VN");
            NumberFormat en = NumberFormat.getInstance(localeEn);
            String tiente = en.format(hocphi);
            dinhdangtien t = new dinhdangtien(tiente);
            int kiemtra = 0;
            txthocphi.setText(t.dinhdangtien());
            for (int i = 0; i < t.dinhdangtien().length(); i++) {
                kiemtra++;
            }
            if (kiemtra <= 5) {
                lbloihocphi.setText("tối thiểu 10.000");
            } else {
                lbloihocphi.setText(" ");
            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_txthocphiFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(from.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(from.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(from.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(from.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new from().setVisible(true);
                Component center = null;
                new from().setLocationRelativeTo(center);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnluu;
    private javax.swing.JButton btnthem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbgioitinh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lbloihocphi;
    private javax.swing.JLabel lbloihoten;
    private javax.swing.JLabel lbloiluong;
    private javax.swing.JLabel lbloimasv;
    private javax.swing.JRadioButton rdsvhttt;
    private javax.swing.JRadioButton rdsvmm;
    private javax.swing.JTextField txtHoten;
    private javax.swing.JTextField txtMasv;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtdiem;
    private javax.swing.JTextField txtdonvi;
    private javax.swing.JTextField txthocphi;
    private javax.swing.JTextField txtluong;
    // End of variables declaration//GEN-END:variables

    private void setngaySinh(Date parse) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
