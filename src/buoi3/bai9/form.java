/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package buoi3.bai9;

import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS TUF
 */
public class form extends javax.swing.JFrame {

    /**
     * Creates new form form
     */
    ArrayList<Number> ds=new ArrayList<>();
    String mess="";
    public form() {
        initComponents();
        this.setLocationRelativeTo(this);
        btnluuchu.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtmin = new javax.swing.JTextField();
        txtvalue = new javax.swing.JTextField();
        txtmax = new javax.swing.JTextField();
        btnkhoitao = new javax.swing.JButton();
        btnluuchu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Min:");

        jLabel2.setText("value:");

        jLabel3.setText("Max:");

        txtmin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtmin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtminFocusLost(evt);
            }
        });
        txtmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtminActionPerformed(evt);
            }
        });

        txtvalue.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtmax.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtmax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtmaxFocusLost(evt);
            }
        });

        btnkhoitao.setText("khởi tạo");
        btnkhoitao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnkhoitaoActionPerformed(evt);
            }
        });

        btnluuchu.setText("Lưu trữ");
        btnluuchu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnluuchuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnkhoitao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(btnluuchu)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtvalue, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtmax, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtmin, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtvalue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtmax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnkhoitao)
                    .addComponent(btnluuchu))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public boolean kiemtra(){
    double max = 0;
    Double min = null;
    if(txtmin.getText().isEmpty()||txtvalue.getText().isEmpty()||txtmax.getText().isEmpty()){
        mess+="các trường không được để trống";
        return false;
    }
    if(txtmax.getText().isEmpty()==false){
        try {
             max=Double.valueOf(txtmax.getText());
        } catch (Exception e) {
            mess+="số không được là chữ";
            return false;
        }
    }
    
     if(txtmin.getText().isEmpty()==false){
        try {
             min=Double.valueOf(txtmin.getText());
        } catch (Exception e) {
            mess+="số không được là chữ";
            return false;
        }
    }
    if(txtvalue.getText().isEmpty()==false){
        
        try {
            int values=Integer.valueOf(txtvalue.getText());
            if(values> min && values < max){
               Number t=new Number(values, min, max);
               if(t.kiemtrasnt()==true){
                   return true;
               }
               else{
                   mess+="values không phải là số nguyên tố";
                   return false;
               }
            }
            else{
                mess+="values không thỏa mãn max min";
                return false;
            }
        } catch (Exception e) {
            String values=txtvalue.getText();
            for(int i=0;i<values.length();i++){
                char ch=values.charAt(i);
                if( ch== ',' || ch==','){
                    mess+="values phải là một số nguyên"
                            + "\n hoặc số không phải là chữ";
                    return false;
                }
            }
        }
    }
    return true;
}
    private void txtminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtminActionPerformed
      
    }//GEN-LAST:event_txtminActionPerformed

    private void btnkhoitaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnkhoitaoActionPerformed

     boolean hople=true;
     hople=kiemtra();
     if(hople){
        Double min=Double.valueOf(txtmin.getText());
      int values=Integer.valueOf(txtvalue.getText());
      Double max=Double.valueOf(txtmax.getText());
     Number t=new Number(values, min, max);
     ds.add(t);
 btnluuchu.setEnabled(true);
         System.out.println(ds);
         mess+="khởi tạo thành công";
         JOptionPane.showMessageDialog(this, mess);
         mess=" ";
     }
     else{
         JOptionPane.showMessageDialog(this, mess);
         mess=" ";
         btnluuchu.setEnabled(false);
     }
     
    }//GEN-LAST:event_btnkhoitaoActionPerformed

    private void txtminFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtminFocusLost
     String min=txtmin.getText();
        dinhdangdiem t=new dinhdangdiem(min);
        txtmin.setText(t.dinhdang());
    }//GEN-LAST:event_txtminFocusLost

    private void txtmaxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtmaxFocusLost
        String max=txtmax.getText();
        dinhdangdiem t=new dinhdangdiem(max);
        txtmax.setText(t.dinhdang());
    }//GEN-LAST:event_txtmaxFocusLost

    private void btnluuchuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnluuchuActionPerformed
       
     boolean hople=true;
     hople=kiemtra();
     if(hople){
 
         try (PrintWriter pw=new PrintWriter("snt.dat")){
             for(Number tmp:ds){
             pw.println(tmp.toString());
             }
         } catch (Exception e) {
         }
         mess+="lưu thành công";
       JOptionPane.showMessageDialog(this, mess);
         mess=" ";
     }
     else{
         JOptionPane.showMessageDialog(this, mess);
         mess=" ";
     }
    }//GEN-LAST:event_btnluuchuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnkhoitao;
    private javax.swing.JButton btnluuchu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtmax;
    private javax.swing.JTextField txtmin;
    private javax.swing.JTextField txtvalue;
    // End of variables declaration//GEN-END:variables
}
